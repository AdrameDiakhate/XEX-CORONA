security:
    encoders:
        App\Entity\User:
            algorithm: auto
    role_hierarchy:    
        ROLE_ADMIN: ROLE_ADMIN_SYTEM
        ROLE_ADMIN_SYSTEM: [ROLE_ADMIN,ROLE_ALLOWED_TO_SWITCH]
            
    providers:
        entity_provider:
            entity:
                class: App\Entity\User
                property: username
        # used to reload user from session & other features (e.g. switch_user)
        #app_user_provider:
            #entity:
                #class: App\Entity\User
                #property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            #user_checker: App\Security\UserChecker
            security: false
        login:
            pattern:  ^/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:  ^/api
            stateless: true
            anonymous: true
            provider: entity_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/docs, roles: IS_AUTHENTICATED_ANONYMOUSLY  }
        #- { path: "^/api/users', roles: [IS_AUTHENTICATED_FULLY, ROLE_ADMIN_SYSTEM] }
